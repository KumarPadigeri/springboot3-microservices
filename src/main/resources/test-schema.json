{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Test API Details",
    "license": {
      "name": "###"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Development server"
    },
    {
      "url": "http://localhost:8081",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:8081",
      "description": "Production server"
    }
  ],
  "paths": {
    "/test/getAlphabets": {
      "get": {
        "summary": "All Alphabets",
        "operationId": "getAlphabets",
        "tags": [
          "test"
        ],
        "responses": {
          "200": {
            "description": "A paged array of Alphabets ",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/test/getLowerAlphabets": {
      "get": {
        "summary": "All lower Alphabets",
        "operationId": "getLowerAlphabets",
        "tags": [
          "test"
        ],
        "responses": {
          "200": {
            "description": "A paged array of Alphabets ",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pet/getAnimals": {
      "get": {
        "summary": "All animals",
        "operationId": "getAnimals",
        "tags": [
          "pet"
        ],
        "responses": {
          "200": {
            "description": "A paged array of pet ",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/kafka/sendMsg/{message}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "message",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Message"
          }
        ],
        "summary": "Sending msg to kafka",
        "operationId": "sendMsgToKafka",
        "tags": [
          "kafka"
        ],
        "responses": {
          "200": {
            "description": "Sending msg to kafka",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/kafka/sendObject": {
      "post": {
        "summary": "Add a new pet",
        "operationId": "sendObjectToKafka",
        "tags": [
          "kafka"
        ],
        "requestBody": {
          "description": "Optional description in *Markdown*",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A paged array of Alphabets ",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/kafka/sendMsgToSpecificPartition/{message}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "message",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Message"
          }
        ],
        "summary": "Sending msg to kafka",
        "operationId": "sendMsgToSpecificPartition",
        "tags": [
          "kafka"
        ],
        "responses": {
          "200": {
            "description": "Sending msg to kafka",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Jobs": {
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "appliedon": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "lastModifiedDate": {
            "type": "string"
          }
        }
      },
      "Student": {
        "properties": {
          "studentID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "dob": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}